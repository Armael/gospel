Tentative table of contents:

   starting example, tutorial-like
     which example? queue (cf FM'19 paper)
     quick demo of one or two tools

   language specification
     lexical conventions
     terms and predicates
     type annotations
       (mutable) model
       invariant
     function contracts
       requires/ensures/etc.
       ghost arguments and returned values
     ghost declarations
       (*@ type
       (*@ val
     function/predicate/axiom
     modules and functors
       (*@ with ... *)

     future work: annotating an OCaml implementation
       contract for toplevel let
       ghost arguments and returned values
       assertions
       loop invariants
       contracts for local functions
       ghost code


TODO
-----

syntax

  - syntax for a default, empty contract

      e.g. val f: int -> int [@@gospel]

    which is not the same as no annotation at all (see below)

semantics
  - no contract (i.e. no attribute "gospel") means we say nothing about the
    function (it may diverge, raise exceptions, etc.)

