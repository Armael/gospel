
*******************************
********** Parsed file ********
*******************************
[@@@ocaml.text " Tests for constant literals "]
val f : int -> float[@@gospel
                      {| y = f x
    requires x = 0
    ensures y = 0. |}]
val g : char -> string[@@gospel
                        {| y = g x
    requires x = 'c'
    ensures y = "c" |}]

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

[@@@ocaml.text " Tests for constant literals "]

val f : int -> float
(*@ y = f x
    requires ...
    ensures ...
     *)

val g : char -> string
(*@ y = g x
    requires ...
    ensures ...
     *)

*******************************
********* Typed GOSPEL ********
*******************************
module constants.mli.pp

  Namespace: constants.mli.pp
    Type symbols
      
    Logic Symbols
      
    Exception Symbols
      
    Namespaces
      
    Type Namespaces
      
  Signatures
    (*@ open Gospelstdlib *)
    
    [@@@ocaml.text " Tests for constant literals "]
    
    val f : int -> float
    (*@ y:float = f x:int
        requires ((integer_of_int  x:int):integer = 0:integer):prop
        ensures (y:float = 0.:float):prop*)
    
    val g : char -> string
    (*@ y_1:string = g x_1:char
        requires (x_1:char = 'c':char):prop
        ensures (y_1:string = "c":string):prop*)


*** OK ***

