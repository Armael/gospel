
*******************************
********** Parsed file ********
*******************************
type t = private
  | A 
  | B of t 
  | C of {
  x: t } [@@gospel
           {| with self
    invariant match self with
              | A -> true
              | B t' -> self = t'
              | C a -> a.x = self |}]
type u = private {
  tag: int ;
  next: u }[@@gospel
             {| with self
    invariant self.tag = self.next.tag = self.next.next.tag |}]
val f : u -> u[@@gospel {| y = f x
    requires x.tag = 0 |}]

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Stdlib *)

(*@ open Gospelstdlib *)

type t = private
| A 
| B of t 
| C of {
x: t } 
  (*@ invariant ...
       *)

type u = private {
tag: int ;
next: u }
  (*@ invariant ...
       *)

val f : u -> u
(*@ y = f x
    requires ...
     *)
gospel: internal error, uncaught exception:
        File "src/patmat.ml", line 370, characters 16-22: Assertion failed
        
