
*******************************
********** Parsed file ********
*******************************
exception E of (int * int * int) 
[@@@gospel {| function integer_of_int (x:int): integer |}]
[@@@gospel {| function fst (x: 'a * 'a): 'a |}]
val f : 'a -> 'a[@@gospel
                  {| x = f y
    raises E (x,y) -> integer_of_int x = 1 |}]

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Stdlib *)

(*@ open Gospelstdlib *)

exception E of (int * int * int) 

(*@ function integer_of_int ... *)

(*@ function fst ... *)

val f : 'a -> 'a
(*@ x = f y
    with ...
     *)
File "t32.mli", line 18, characters 13-18:
Error: This pattern matches values of type `'a40 * 'a41'
       but a pattern was expected which matches values of type
       `int * int * int'.
