
*******************************
********** Parsed file ********
*******************************
type t =
  | A 
val f : t -> int[@@gospel
                  {| r = f x
  requires match x with
           | A when 1 = 1 -> true
           | _ when true -> false
|}]

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Stdlib *)

(*@ open Gospelstdlib *)

type t =
| A 
  

val f : t -> int
(*@ r = f x
    requires ...
     *)
File "guard4.mli", line 5, characters 11-91:
Error: This pattern-matching may not be exhaustive because of the guard.
       Here is an example of a case that may not be matched:
         A.
